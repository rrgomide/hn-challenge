services:
  mongodb:
    image: mongo:7.0
    container_name: hn-challenge-mongodb
    ports:
      - '27017:27017'
    env_file:
      - ../apps/backend/.env
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', 'db.runCommand({ping: 1})', '--quiet']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: backend
    container_name: hn-challenge-backend
    ports:
      - '3000:3000'
    env_file:
      - ../apps/backend/.env
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: frontend
    container_name: hn-challenge-frontend
    ports:
      - '3030:3030'
    environment:
      - PORT=3030
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3030']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mongodb_data:
